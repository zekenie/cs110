#! /usr/bin/env node
require('coffee-script');
var dateFormatter = require('../app/lib/dateFormatter.coffee')();
var config = {
    "mongoUri":"mongodb://localhost/cs110",
    "twilio":{
        "sid":"ACc21b28a9096139edbc9c129e7a05a4e5",
        "authToken":"29b89b1f43243100fd53f7ff6697c0c3",
        "phone":"+14139313184"    
    },
    "postmark":"{{POSTMARK}}"
};
var mongoose = require('mongoose');
ObjectId = mongoose.Types.ObjectId;
var _ = require('lodash');
var today = new Date();
if(today.getDay() === 0){
    mongoose.connect(config.mongoUri);
    require('../app/models/Users')(dateFormatter, config, require("../app/models/NotificationBlacklists.coffee")(dateFormatter, config));
    mongoose.model('Users').find({},'_id assigned_students role').exec(function(err, data){
        var groupedClass =  _.groupBy(data,'role');
        var tas = groupedClass.ta;
        var shuffledStudents = _.shuffle(groupedClass.student);
        var studentsPerTa = shuffledStudents.length/tas.length;
        for(var i = 0; i < tas.length; ++i){
            tas[i].assigned_students = [];
            for(var o = 0; o<studentsPerTa; ++o){
                if(shuffledStudents.length > 0){
                    tas[i].assigned_students.addToSet(shuffledStudents.pop()._id);
                }
            }
            tas[i].save(function(err,data){
                if(data){
                    console.log("saved: ", data);
                    
                }else{
                    console.log(err);
                    process.exit(1);
                }
            });
        }
    });
    setTimeout(function(){
            process.exit();
    },60000*2) ;
}
